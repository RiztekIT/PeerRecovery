{"version":3,"sources":["node_modules/@ionic/core/dist/esm/button-active-4927a4c1.js","node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","node_modules/agm-overlays/fesm2015/agm-overlays.js","src/app/services/appointment.service.ts","src/app/services/reward.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-f49d994d.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { __decorate } from 'tslib';\nimport { EventEmitter, QueryList, Input, Output, ContentChildren, ViewChild, ElementRef, Component, NgModule } from '@angular/core';\nimport { GoogleMapsAPIWrapper, MarkerManager, AgmInfoWindow } from '@agm/core';\nimport { CommonModule } from '@angular/common';\n\nlet AgmOverlay = class AgmOverlay {\n    constructor(_mapsWrapper, _markerManager //rename to fight the private declaration of parent\n    ) {\n        this._mapsWrapper = _mapsWrapper;\n        this._markerManager = _markerManager;\n        this.visible = true; //possibly doesn't work and just left over from agm-core marker replication\n        this.zIndex = 1;\n        //TIP: Do NOT use this... Just put (click) on your html overlay element\n        this.markerClick = new EventEmitter();\n        this.openInfoWindow = true;\n        this.infoWindow = new QueryList();\n        //TODO, implement this\n        this.draggable = false;\n        //elmGuts:any\n        this._observableSubscriptions = [];\n    }\n    ngAfterViewInit() {\n        //remove reference of info windows\n        const iWins = this.template.nativeElement.getElementsByTagName('agm-info-window');\n        for (let x = iWins.length - 1; x >= 0; --x) {\n            iWins[x].parentNode.removeChild(iWins[x]);\n        }\n        this.load().then(() => {\n            this.onChanges = this.onChangesOverride;\n        });\n    }\n    ngAfterContentInit() {\n        this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n    }\n    ngOnChanges(changes) {\n        this.onChanges(changes);\n    }\n    onChanges(changes) { }\n    onChangesOverride(changes) {\n        if (changes.latitude || changes.longitude || changes.zIndex) {\n            this.overlayView.latitude = this.latitude;\n            this.overlayView.longitude = this.longitude;\n            this.overlayView.zIndex = this.zIndex;\n            this.destroy().then(() => this.load());\n        }\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    destroy() {\n        this.destroyed = true;\n        const promise = this._markerManager.deleteMarker(this.overlayView);\n        if (this.overlayView) {\n            if (this.overlayView.div) {\n                this.overlayView.remove();\n            }\n            this.overlayView.setMap(null);\n        }\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n        delete this.overlayView;\n        //delete this.elmGuts\n        return promise;\n    }\n    handleInfoWindowUpdate() {\n        if (this.infoWindow.length > 1) {\n            throw new Error('Expected no more than one info window.');\n        }\n        this.infoWindow.forEach(iWin => {\n            iWin.hostMarker = this.overlayView;\n        });\n    }\n    load() {\n        return this._mapsWrapper.getNativeMap()\n            .then(map => {\n            const overlay = this.getOverlay(map);\n            this._markerManager.addMarker(overlay);\n            this._addEventListeners();\n            return this._markerManager.getNativeMarker(overlay);\n        })\n            .then(nativeMarker => {\n            const setMap = nativeMarker.setMap;\n            if (nativeMarker['map']) {\n                this.overlayView.setMap(nativeMarker['map']);\n            }\n            nativeMarker.setMap = (map) => {\n                setMap.call(nativeMarker, map);\n                if (this.overlayView) {\n                    this.overlayView.setMap(map);\n                }\n            };\n        });\n    }\n    getOverlay(map) {\n        this.overlayView = this.overlayView || new google.maps.OverlayView();\n        /* make into foo marker that AGM likes */\n        this.overlayView.iconUrl = \" \";\n        this.overlayView.latitude = this.latitude;\n        this.overlayView.longitude = this.longitude;\n        this.overlayView.visible = false; //hide 40x40 transparent placeholder that prevents hover events\n        /* end */\n        if (this.bounds) {\n            this.overlayView.bounds_ = new google.maps.LatLngBounds(new google.maps.LatLng(this.latitude + this.bounds.x.latitude, this.longitude + this.bounds.x.longitude), new google.maps.LatLng(this.latitude + this.bounds.y.latitude, this.longitude + this.bounds.y.longitude));\n        }\n        // js-marker-clusterer does not support updating positions. We are forced to delete/add and compensate for .removeChild calls\n        const elm = this.template.nativeElement.children[0];\n        //const elm =  this.elmGuts || this.template.nativeElement.children[0]\n        //we must always be sure to steal our stolen element back incase we are just in middle of changes and will redraw\n        const restore = (div) => {\n            this.template.nativeElement.appendChild(div);\n        };\n        this.overlayView.remove = function () {\n            if (!this.div)\n                return;\n            this.div.parentNode.removeChild(this.div);\n            restore(this.div);\n            delete this.div;\n        };\n        this.overlayView.getDiv = function () {\n            return this.div;\n        };\n        this.overlayView.draw = function () {\n            if (!this.div) {\n                this.div = elm;\n                const panes = this.getPanes();\n                // if no panes then assumed not on map\n                if (!panes || !panes.overlayImage)\n                    return;\n                panes.overlayImage.appendChild(elm);\n            }\n            const latlng = new google.maps.LatLng(this.latitude, this.longitude);\n            const proj = this.getProjection();\n            if (!proj)\n                return;\n            const point = proj.fromLatLngToDivPixel(latlng);\n            if (point) {\n                elm.style.left = (point.x - 10) + 'px';\n                elm.style.top = (point.y - 20) + 'px';\n            }\n            if (this.bounds_) {\n                // stretch content between two points leftbottom and righttop and resize\n                const proj = this.getProjection();\n                const sw = proj.fromLatLngToDivPixel(this.bounds_.getSouthWest());\n                const ne = proj.fromLatLngToDivPixel(this.bounds_.getNorthEast());\n                this.div.style.left = sw.x + 'px';\n                this.div.style.top = ne.y + 'px';\n                this.div.children[0].style.width = ne.x - sw.x + 'px';\n                this.div.children[0].style.height = sw.y - ne.y + 'px';\n            }\n        };\n        elm.addEventListener(\"click\", event => {\n            this.handleTap();\n            event.stopPropagation();\n        });\n        this.handleInfoWindowUpdate();\n        return this.overlayView;\n    }\n    handleTap() {\n        if (this.openInfoWindow) {\n            this.infoWindow.forEach(infoWindow => {\n                infoWindow.open();\n            });\n        }\n        this.markerClick.emit(null);\n    }\n    _addEventListeners() {\n        const eo = this._markerManager.createEventObservable('click', this.overlayView);\n        const cs = eo.subscribe(() => this.handleTap());\n        this._observableSubscriptions.push(cs);\n    }\n};\nAgmOverlay.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: MarkerManager //rename to fight the private declaration of parent\n     }\n];\n__decorate([\n    Input()\n], AgmOverlay.prototype, \"latitude\", void 0);\n__decorate([\n    Input()\n], AgmOverlay.prototype, \"longitude\", void 0);\n__decorate([\n    Input()\n], AgmOverlay.prototype, \"visible\", void 0);\n__decorate([\n    Input()\n], AgmOverlay.prototype, \"zIndex\", void 0);\n__decorate([\n    Input()\n], AgmOverlay.prototype, \"bounds\", void 0);\n__decorate([\n    Output()\n], AgmOverlay.prototype, \"markerClick\", void 0);\n__decorate([\n    Input()\n], AgmOverlay.prototype, \"openInfoWindow\", void 0);\n__decorate([\n    ContentChildren(AgmInfoWindow)\n], AgmOverlay.prototype, \"infoWindow\", void 0);\n__decorate([\n    Input('markerDraggable')\n], AgmOverlay.prototype, \"draggable\", void 0);\n__decorate([\n    ViewChild('content', { read: ElementRef })\n], AgmOverlay.prototype, \"template\", void 0);\nAgmOverlay = __decorate([\n    Component({\n        selector: \"agm-overlay\",\n        template: '<div #content><div style=\"position:absolute\"><ng-content></ng-content></div></div>'\n    })\n], AgmOverlay);\n\nlet AgmOverlays = class AgmOverlays {\n};\nAgmOverlays = __decorate([\n    NgModule({\n        imports: [\n            CommonModule\n        ],\n        declarations: [AgmOverlay],\n        exports: [AgmOverlay],\n    })\n], AgmOverlays);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmOverlay, AgmOverlays };\n//# sourceMappingURL=agm-overlays.js.map\n","import { Injectable } from '@angular/core';\nimport { UserModel } from '../models/users.model';\nimport { AuthService } from './auth.service';\nimport { Observable, Subject } from 'rxjs';\nimport { of } from 'rxjs';\nimport firebase from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AppointmentService {\n\n  constructor(private firebaseAuthService: AuthService) {   \n   }\n\n   getAppointment(appointmentID){\n    return firebase.database().ref('Appointments').child(appointmentID);\n   }\n\n   updateAppointment(appointmentID, appointmentObj){\n      return firebase.database()\n      .ref('Appointments')\n      .child(appointmentID)\n      .update(appointmentObj);\n   }\n\n   getAppointments(){\n    return firebase.database()\n    .ref('Appointments/')\n    .orderByChild(\"userID\")\n    .equalTo(this.firebaseAuthService.usersign.uid);\n   }\n\n\n  postAppointment(appointmentObj){\n    var key = this.firebaseAuthService.usersign.uid + \"_\" + Date.now();\n    firebase.database().ref('/Appointments/' + key).set(appointmentObj);\n  }\n\n  getApps(user){\n\n    return firebase.database().ref('Appointment/Users/'+user)\n\n  }\n\n  addApp(app){\n\n    console.log(app);\n\n    let key = firebase.database().ref('Appointment/Apps').push(app).key\n    firebase.database().ref('Appointment/Users/'+app.user+'/'+key).set(app)\n\n  }\n\n  editapp(app){\n\n    //console.log(app);\n\n    firebase.database().ref('Appointment/Apps/'+app.appkey+'/').set(app)\n    firebase.database().ref('Appointment/Users/'+app.user+'/'+app.appkey).set(app)\n\n  }\n\n}\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport firebase from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RewardService {\n\n  rewardSelected;\n\n  constructor() { }\n\n  addReward(reward){\n\n    \n    console.log(reward);\n\n    let key = firebase.database().ref('Rewards/Rewards').push(reward).key\n    firebase.database().ref('Rewards/Tasks/'+key).set(reward.task)\n    firebase.database().ref('Rewards/Users/'+reward.user+'/'+key).set(reward)\n\n  }\n\n\n  getRewards(user){\n\n    return firebase.database().ref('Rewards/Users/'+user)\n\n  }\n\n  editReward(reward){\n\n    console.log(reward);\n\n    firebase.database().ref('Rewards/Rewards/'+reward.rewardkey).set(reward)\n    firebase.database().ref('Rewards/Tasks/'+reward.rewardkey).set(reward.task)\n    firebase.database().ref('Rewards/Users/'+reward.user+'/'+reward.rewardkey).set(reward)\n\n\n\n  }\n\n  addTask(){\n\n  }\n\n  removeTask(reward){\n    firebase.database().ref('Rewards/Rewards/'+reward.rewardkey+'/task').set(reward.task)\n    firebase.database().ref('Rewards/Tasks/'+reward.rewardkey).set(reward.task)\n    firebase.database().ref('Rewards/Users/'+reward.user+'/'+reward.rewardkey).set(reward)\n\n  }\n\n  edittask(reward,task,i){\n    firebase.database().ref('Rewards/Rewards/'+reward.rewardkey+'/task/'+i).set(task)\n    firebase.database().ref('Rewards/Tasks/'+reward.rewardkey+'/'+i).set(task)\n    firebase.database().ref('Rewards/Users/'+reward.user+'/'+reward.rewardkey+'/task/'+i).set(task)\n  }\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}