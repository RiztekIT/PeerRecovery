{"version":3,"sources":["src/app/pages/profiledatasheet/profiledatasheet.page.html","src/app/pages/profiledatasheet/profiledatasheet-routing.module.ts","src/app/pages/profiledatasheet/profiledatasheet.module.ts","src/app/pages/profiledatasheet/profiledatasheet.page.scss","src/app/pages/profiledatasheet/profiledatasheet.page.ts","src/app/services/profile.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar mode=\\\"md\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"home\\\" icon=\\\"chevron-back-outline\\\" text=\\\"\\\" mode=\\\"md\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>Participant Data Sheet </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n\\n\\n\\n\\n    <ion-item>\\n        <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Name</ion-label>\\n        <ion-input [(ngModel)]=\\\"this.name\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Age</ion-label>\\n        <ion-input [(ngModel)]=\\\"this.age\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Sobriety Date</ion-label>\\n        <ion-datetime displayFormat=\\\"MMM DD YYYY\\\" [(ngModel)]=\\\"this.sobrietyDate\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Current phase of DWI Court</ion-label>\\n        <ion-input [(ngModel)]=\\\"this.phaseDWI\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Occupation</ion-label>\\n        <ion-input [(ngModel)]=\\\"this.Occupation\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Employeer</ion-label>\\n        <ion-input [(ngModel)]=\\\"this.Employeer\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Describe your Job</ion-label>\\n        <ion-input [(ngModel)]=\\\"this.job\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item-group>\\n        <ion-item-divider>\\n            <ion-label color=\\\"primary\\\" class=\\\"ion-text-wrap\\\">Does your employeer know about this probation?</ion-label>\\n        </ion-item-divider>\\n\\n        <ion-radio-group [(ngModel)]=\\\"this.probationKnow\\\">\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">Yes</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=true></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">No</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=false></ion-radio>\\n            </ion-item>\\n\\n        </ion-radio-group>\\n    </ion-item-group>\\n\\n    <ion-item-group *ngIf=\\\"this.probationKnow==true\\\">\\n        <ion-item-divider>\\n            <ion-label color=\\\"primary\\\" class=\\\"ion-text-wrap\\\">If so, are they supportive?</ion-label>\\n        </ion-item-divider>\\n\\n\\n        <!--     <ion-label position=\\\"floating\\\">If so, are they supportive?</ion-label> -->\\n        <ion-radio-group [(ngModel)]=\\\"this.supportiveJob\\\">\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">Yes</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=true></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">No</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=false></ion-radio>\\n            </ion-item>\\n\\n        </ion-radio-group>\\n    </ion-item-group>\\n\\n\\n    <ion-item-group>\\n        <ion-item-divider>\\n            <ion-label color=\\\"primary\\\">Status</ion-label>\\n        </ion-item-divider>\\n\\n        <!-- <ion-label position=\\\"floating\\\">Status</ion-label> -->\\n        <ion-radio-group [(ngModel)]=\\\"this.status\\\">\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">Single</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Single\\\"></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">Married</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Married\\\"></ion-radio>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">Divorced</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Divorced\\\"></ion-radio>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">Widowed</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Widowed\\\"></ion-radio>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">Other commited relationship</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"Other\\\"></ion-radio>\\n            </ion-item>\\n\\n        </ion-radio-group>\\n\\n    </ion-item-group>\\n\\n    <ion-item>\\n        <ion-label color=\\\"primary\\\" position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">First name of spouse / significant other, if any </ion-label>\\n        <ion-input [(ngModel)]=\\\"this.nameSpouse\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-button expand=\\\"full\\\" (click)=\\\"addChildren()\\\">\\n        <ion-icon slot=\\\"end\\\" name=\\\"add\\\"></ion-icon>\\n        Add Children\\n    </ion-button>\\n\\n    <ion-item-group *ngFor=\\\"let child of children\\\">\\n        <ion-item>\\n            <ion-label color=\\\"primary\\\" position=\\\"floating\\\">First name of Children </ion-label>\\n            <ion-input [(ngModel)]=\\\"child.name\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Age of Children </ion-label>\\n            <ion-input [(ngModel)]=\\\"child.age\\\"></ion-input>\\n        </ion-item>\\n\\n    </ion-item-group>\\n\\n    <ion-item>\\n        <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Who lives with you & your relation to you? </ion-label>\\n        <ion-input [(ngModel)]=\\\"this.liveswithyou\\\"></ion-input>\\n    </ion-item>\\n\\n\\n    <ion-item-group>\\n        <ion-item-divider>\\n            <ion-label color=\\\"primary\\\">Are you presently in treatment?</ion-label>\\n        </ion-item-divider>\\n        <!-- <ion-label position=\\\"floating\\\"></ion-label> -->\\n        <ion-radio-group [(ngModel)]=\\\"this.treatmeant\\\">\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">Yes</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=true></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">No</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=false></ion-radio>\\n            </ion-item>\\n\\n        </ion-radio-group>\\n    </ion-item-group>\\n\\n    <ion-item *ngIf=\\\"this.treatmeant\\\">\\n        <ion-label color=\\\"primary\\\" position=\\\"floating\\\">What phase / type?</ion-label>\\n        <ion-input [(ngModel)]=\\\"this.phaseTreatmeant\\\"></ion-input>\\n\\n    </ion-item>\\n    <ion-item>\\n        <ion-label color=\\\"primary\\\" position=\\\"floating\\\">What sober support group do you attend </ion-label>\\n        <ion-input [(ngModel)]=\\\"this.soberGroup\\\"></ion-input>\\n\\n    </ion-item>\\n\\n    <ion-item-group>\\n        <ion-item-divider>\\n            <ion-label color=\\\"primary\\\">If AA, do you have a sponsor?</ion-label>\\n        </ion-item-divider>\\n        <!-- <ion-label position=\\\"floating\\\"></ion-label> -->\\n        <ion-radio-group [(ngModel)]=\\\"this.sponsorAA\\\">\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">Yes</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=true></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">No</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=false></ion-radio>\\n            </ion-item>\\n\\n        </ion-radio-group>\\n    </ion-item-group>\\n\\n\\n    <ion-item-group>\\n        <ion-item-divider>\\n            <ion-label color=\\\"primary\\\">Working steps?</ion-label>\\n        </ion-item-divider>\\n        <!-- <ion-label position=\\\"floating\\\">Working steps?</ion-label> -->\\n        <ion-radio-group [(ngModel)]=\\\"this.steps\\\">\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">Yes</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=true></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">No</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=false></ion-radio>\\n            </ion-item>\\n\\n        </ion-radio-group>\\n    </ion-item-group>\\n\\n    <ion-item-group>\\n        <ion-item-divider>\\n            <ion-label color=\\\"primary\\\" class=\\\"ion-text-wrap\\\">What part of the <b>DWI Court program</b> is the most helpful for your sobriety?</ion-label>\\n            <ion-label color=\\\"primary\\\" class=\\\"ion-text-wrap\\\">(Circle all that apply)</ion-label>\\n        </ion-item-divider>\\n        <!-- <ion-label position=\\\"floating\\\">What part of the <b>DWI Court program</b> is the most helpful for your sobriety?</ion-label> -->\\n        <ion-item *ngFor=\\\"let dwi of DWICourtProgram\\\">\\n            <ion-label color=\\\"primary\\\">{{dwi.name}}</ion-label>\\n            <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"dwi.isChecked\\\"></ion-checkbox>\\n        </ion-item>\\n        <ion-label color=\\\"primary\\\" *ngIf=\\\"DWICourtProgram[12].isChecked\\\" position=\\\"floating\\\">Other </ion-label>\\n        <ion-input *ngIf=\\\"DWICourtProgram[12].isChecked\\\" [(ngModel)]=\\\"otherpartDWI\\\"></ion-input>\\n\\n\\n\\n    </ion-item-group>\\n\\n    <ion-item-group>\\n        <ion-item-divider>\\n            <ion-label color=\\\"primary\\\" class=\\\"ion-text-wrap\\\">What are your favorite incentives?</ion-label>\\n            <ion-label color=\\\"primary\\\" class=\\\"ion-text-wrap\\\">(Circle all that apply)</ion-label>\\n        </ion-item-divider>\\n        <!-- <ion-label position=\\\"floating\\\">What are your favorite incentives?</ion-label> -->\\n        <!-- <ion-note>(Circle all that apply)</ion-note> -->\\n        <ion-item *ngFor=\\\"let incentive of favoriteIncentive\\\">\\n            <ion-label color=\\\"primary\\\">{{incentive.name}}</ion-label>\\n            <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"incentive.isChecked\\\"></ion-checkbox>\\n        </ion-item>\\n        <ion-label color=\\\"primary\\\" *ngIf=\\\"favoriteIncentive[9].isChecked\\\" position=\\\"floating\\\">Other </ion-label>\\n        <ion-input *ngIf=\\\"favoriteIncentive[9].isChecked\\\" [(ngModel)]=\\\"otherIncentive\\\"></ion-input>\\n\\n\\n\\n    </ion-item-group>\\n\\n    <ion-item>\\n        <ion-label color=\\\"primary\\\" class=\\\"ion-text-wrap\\\" position=\\\"floating\\\">What are some fun things you do that help you stay sober?</ion-label>\\n        <ion-textarea [(ngModel)]=\\\"this.funThings\\\"></ion-textarea>\\n    </ion-item>\\n\\n    <ion-item-group>\\n        <ion-item-divider>\\n            <ion-label color=\\\"primary\\\" class=\\\"ion-text-wrap\\\">The main source(s) of stress in my life right now is / are:</ion-label>\\n            <ion-label color=\\\"primary\\\" class=\\\"ion-text-wrap\\\">(Circle all that apply)</ion-label>\\n        </ion-item-divider>\\n        <!-- <ion-label position=\\\"floating\\\">The main source(s) of stress in my life right now is / are:</ion-label>\\n            <ion-note>(Circle all that apply)</ion-note> -->\\n        <ion-item *ngFor=\\\"let source of sourceStress\\\">\\n            <ion-label color=\\\"primary\\\">{{source.name}}</ion-label>\\n            <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"source.isChecked\\\"></ion-checkbox>\\n        </ion-item>\\n        <ion-label color=\\\"primary\\\" *ngIf=\\\"sourceStress[6].isChecked\\\" position=\\\"floating\\\">Other </ion-label>\\n        <ion-input *ngIf=\\\"sourceStress[6].isChecked\\\" [(ngModel)]=\\\"othersourceStress\\\"></ion-input>\\n\\n\\n\\n    </ion-item-group>\\n\\n    <ion-item>\\n        <ion-label color=\\\"primary\\\" class=\\\"ion-text-wrap\\\" position=\\\"floating\\\">Who is the most supportive person(s) of your recovery?</ion-label>\\n        <ion-textarea [(ngModel)]=\\\"this.mostSupportPerson\\\"></ion-textarea>\\n    </ion-item>\\n\\n\\n    <ion-item-group>\\n        <ion-item-divider>\\n            <ion-label color=\\\"primary\\\" class=\\\"ion-text-wrap\\\">Circle what alcohol / drug detenction device(s) you currently have, if any:</ion-label>\\n\\n        </ion-item-divider>\\n        <!-- <ion-label position=\\\"floating\\\">Circle what alcohol / drug detenction device(s) you currently have, if any:</ion-label> -->\\n        <!-- <ion-note>(Circle all that apply)</ion-note> -->\\n        <ion-item *ngFor=\\\"let device of detectionDevice\\\">\\n            <ion-label color=\\\"primary\\\">{{device.name}}</ion-label>\\n            <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"device.isChecked\\\"></ion-checkbox>\\n        </ion-item>\\n\\n\\n\\n\\n    </ion-item-group>\\n\\n\\n    <ion-item-group>\\n        <ion-item-divider>\\n            <ion-label color=\\\"primary\\\" class=\\\"ion-text-wrap\\\">Is your driver´s licence currently suspended</ion-label>\\n\\n        </ion-item-divider>\\n        <!-- <ion-label position=\\\"floating\\\">Is your driver´s licence currently suspended</ion-label> -->\\n        <ion-radio-group [(ngModel)]=\\\"this.driverLicenceSuspend\\\">\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">Yes</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=true></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">No</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=false></ion-radio>\\n            </ion-item>\\n\\n        </ion-radio-group>\\n    </ion-item-group>\\n\\n    <ion-item-group>\\n        <ion-item-divider>\\n            <ion-label color=\\\"primary\\\">If yes, do you have a Occupational DL?</ion-label>\\n\\n        </ion-item-divider>\\n        <!-- <ion-label position=\\\"floating\\\">If yes, do you have a Occupational DL?</ion-label> -->\\n        <ion-radio-group [(ngModel)]=\\\"this.occupationalDL\\\">\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">Yes</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=true></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label color=\\\"primary\\\">No</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=false></ion-radio>\\n            </ion-item>\\n\\n        </ion-radio-group>\\n    </ion-item-group>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    <ion-button expand=\\\"full\\\" (click)=\\\"addprofileDS()\\\">Save</ion-button>\\n\\n    <ion-text *ngIf=\\\"this.ver\\\">\\n        {{this.profileDS |json}}\\n    </ion-text>\\n\\n\\n\\n\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfiledatasheetPage } from './profiledatasheet.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfiledatasheetPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfiledatasheetPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfiledatasheetPageRoutingModule } from './profiledatasheet-routing.module';\n\nimport { ProfiledatasheetPage } from './profiledatasheet.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfiledatasheetPageRoutingModule\n  ],\n  declarations: [ProfiledatasheetPage]\n})\nexport class ProfiledatasheetPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGVkYXRhc2hlZXQvcHJvZmlsZWRhdGFzaGVldC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ProfileService } from '../../services/profile.service';\n\n@Component({\n  selector: 'app-profiledatasheet',\n  templateUrl: './profiledatasheet.page.html',\n  styleUrls: ['./profiledatasheet.page.scss'],\n})\nexport class ProfiledatasheetPage implements OnInit {\n\n  name = '';\n  age = '';\n  sobrietyDate= '';\n  phaseDWI= '';\n  Occupation= '';\n  Employeer= '';\n  job= '';\n  probationKnow =false;\n  supportiveJob= '';\n  status= '';\n  nameSpouse= '';\n  children = []\n  liveswithyou= '';\n  treatmeant = false;\n  phaseTreatmeant = '';\n  soberGroup= '';\n  sponsorAA =false;\n  steps =false;  \n  otherpartDWI= '';\n  otherIncentive= '';\n  othersourceStress= '';  \n  funThings= '';  \n  mostSupportPerson= '';  \n  driverLicenceSuspend= '';\n  occupationalDL= '';\n\n  DWICourtProgram = [\n    {name:'My Case Manager',isChecked: false},\n    {name:'My Treatment',isChecked: false},\n    {name:'Sheriff´s Visits',isChecked: false},\n    {name:'AA/Sober Group Support',isChecked: false},\n    {name:'My Judge / Team',isChecked: false},\n    {name:'Drug/ Alc Testing',isChecked: false},\n    {name:'Receiving Incentives',isChecked: false},\n    {name:'Fear of Punishment',isChecked: false},\n    {name:'Accountability',isChecked: false},\n    {name:'Avoiding Jail',isChecked: false},\n    {name:'Interlock Device',isChecked: false},\n    {name:'Support of Other Clients',isChecked: false},\n    {name:'Other',isChecked: false}\n  ]\n\n  favoriteIncentive = [\n    {name:'Fish Bowl',isChecked: false},\n    {name:'Gift Card',isChecked: false},\n    {name:'Bus Passes',isChecked: false},\n    {name:'Community Service Voucher',isChecked: false},\n    {name:'Report by Skype',isChecked: false},\n    {name:'Candy, treats',isChecked: false},\n    {name:'Spin the Wheel',isChecked: false},\n    {name:'Certificates (Sobriety, etc.)',isChecked: false},\n    {name:'Praise, positive feedback',isChecked: false},\n    {name:'Other',isChecked: false}\n  ]\n\n  sourceStress = [\n    {name:'Financial',isChecked: false},\n    {name:'Family / Relationships',isChecked: false},\n    {name:'Program Demands',isChecked: false},\n    {name:'Transportation',isChecked: false},\n    {name:'Health issues',isChecked: false},\n    {name:'Work / Employment',isChecked: false},\n    {name:'Other',isChecked: false},\n  ];\n\n  detectionDevice = [\n    {name:'Portable or handheld',isChecked: false},\n    {name:'Interlock on Vehicle',isChecked: false},\n    {name:'SCRAM',isChecked: false},\n    {name:'Drug patch',isChecked: false},\n  ];\n\n\n  profileDS;\n\n  ver= false;\n\n\n\n\n\n  \n  constructor(\n    public profileSVC: ProfileService\n  ) { }\n\n  ngOnInit() {\n  }\n\n\n  initProfileDS(){\n   \n  }\n\n\n  addChildren(){\n    let children = {\n      name: '',\n      age: ''\n\n    }\n\n    this.children.push(children)\n  }\n\n  addprofileDS(){\n\n    this.profileDS = {\n\n      name : this.name,\n      age : this.age,\n      sobrietyDate : this.sobrietyDate,\n      phaseDWI : this.phaseDWI,\n      Occupation : this.Occupation,\n      Employeer : this.Employeer,\n      job : this.job,\n      probationKnow : this.probationKnow,\n      supportiveJob : this.supportiveJob,\n      status : this.status,\n      nameSpouse : this.nameSpouse,\n      children  : this.children ,\n      liveswithyou : this.liveswithyou,\n      treatmeant : this.treatmeant,\n      phaseTreatmeant : this.phaseTreatmeant,\n      soberGroup : this.soberGroup,\n      sponsorAA : this.sponsorAA,\n      steps : this.steps,\n      otherpartDWI : this.otherpartDWI,\n      otherIncentive : this.otherIncentive,\n      othersourceStress : this.othersourceStress,\n      funThings : this.funThings,\n      mostSupportPerson : this.mostSupportPerson,\n      driverLicenceSuspend : this.driverLicenceSuspend,\n      occupationalDL : this.occupationalDL,\n      DWICourtProgram: this.DWICourtProgram,\n      favoriteIncentive: this.favoriteIncentive,\n      sourceStress: this.sourceStress,\n      detectionDevice: this.detectionDevice\n\n    }\n\n    this.ver = true;\n\n\n\n   \n\n\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport firebase from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor() { }\n\n  getProfileDS(user){\n\n    return firebase.database().ref('Profile/DataSheet/Users/'+user)\n\n  }\n\n  addProfileDS(ds){\n\n    console.log(ds);\n\n    let key = firebase.database().ref('Profile/DataSheet/DataSheet').push(ds).key\n    firebase.database().ref('Profile/DataSheet/Users/'+ds.user+'/'+key).set(ds)\n\n  }\n\n  editProfileDS(ds){\n\n    //console.log(app);\n\n    firebase.database().ref('Profile/DataSheet/DataSheet/'+ds.appkey+'/').set(ds)\n    firebase.database().ref('Profile/DataSheet/Users/'+ds.user+'/'+ds.appkey).set(ds)\n\n  }\n}\n"],"sourceRoot":"webpack:///","file":"pages-profiledatasheet-profiledatasheet-module-es5.js"}