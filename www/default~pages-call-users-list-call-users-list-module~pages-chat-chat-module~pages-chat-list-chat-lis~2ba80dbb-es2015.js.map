{"version":3,"sources":["./src/app/services/chat.service.ts"],"names":[],"mappings":"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","file":"default~pages-call-users-list-call-users-list-module~pages-chat-chat-module~pages-chat-list-chat-lis~2ba80dbb-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { UserModel } from '../models/users.model';\n\nimport { AuthService } from './auth.service';\n\nimport { Observable, Subject } from 'rxjs';\nimport { of } from 'rxjs';\nimport firebase from 'firebase';\n//import { UserModel } from 'app/models/users.model';\n\nconst snapshotToArray = (snapshot: any) => {\n  const returnArr = [];\n\n  snapshot.forEach((childSnapshot: any) => {\n      const item = childSnapshot.val();\n      item.key = childSnapshot.key;\n      returnArr.push(item);\n  });\n\n  return returnArr;\n};\nconst snapshotToArray2 = (snapshot: any) => {\n  const returnArr = [];\n\n  snapshot.forEach((childSnapshot: any) => {\n      const item = childSnapshot.val();\n      /* item.key = childSnapshot.key; */\n      returnArr.push(item);\n  });\n\n  return returnArr;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\nexport class ChatService {\n   \n  private subject = new Subject<any>();\n  public chatsUsers: any[] = [];\n\n  usersDBRef:any;\n  users: any[] = [];\n\n  public myObservable$: Observable<any>;\n/*  */\nkeymessage;\nuser2\n/*  */\n\n  constructor(private firebaseAuthService: AuthService) { \n    //this.usersDBRef = this.firebaseAuthService.firebaseDB.collection('users');\n\n\n\n//    this.myObservable$ = this.usersDBRef.onSnapshot();\n\n  //  console.log(this.myObservable$);\n   }\n\n\n /*   postUser(user:UserModel){\n      \n      this.usersDBRef\n      .add(Object.assign({}, user)).then(docRef=>{\n          console.log(docRef);\n      }).catch(e=> console.log(\"error: \"+ e));\n   } */\n\n /*getUsers(){\n  this.usersDBRef.onSnapshot(  snap =>{\n    snap.forEach( snapHijo =>{\n        this.users.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        })\n    });\n  });\n }*/\n\n\n  getUserChats(){\n\n    return firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/');\n\n    //return this.afDB.object('cliente/').valueChanges()\n\n  }\n\n  getChatsMembers(idchat){\n    return firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/'+idchat);\n  }\n\n  getChats(){\n    return firebase.database().ref(this.firebaseAuthService.usersign.uid+'/chats/');\n  }\n\n  getUser(uid){\n    return firebase.database().ref('Users/'+uid);\n  }\n\n  getUsers(){\n    return firebase.database().ref('Users/');\n  }\n\n  getRel(user,key){\n     \n    return firebase.database().ref('Relations/'+user.uid+'/'+key)\n   }\n\n   getChat2(user, userchat){\n\n    return firebase.database().ref('Chats/Chats/'+user.uid).orderByValue().equalTo(userchat)\n\n   }\n\n/*   getChat(){\n    return firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/');\n  } */\n\n  getChat(user, userchat){\n\n    return firebase.database().ref('Chats/Chats/'+user.uid+'/'+userchat)\n\n   }\n\n /*  getMessages(chatid){\n    return firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/'+chatid);\n  } */\n\n  getMessages(){\n    return firebase.database().ref('Chats/Messages/'+this.keymessage)\n   }\n\n   addChat(user, userchat){\n    //firebase.database().ref(user.uid+'/data/type').set(type);\n    let chat = {\n      name: 'single',\n      timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n      members: {\n        user1: user.uid,\n        user2: userchat.uid\n      }\n\n    }\n\n    let key = firebase.database().ref('Chats/Chats/').push(chat).key\n    firebase.database().ref('Chats/Chats/'+user.uid+'/'+key).set(userchat.uid)\n    firebase.database().ref('Chats/Chats/'+userchat.uid+'/'+key).set(user.uid)\n    this.keymessage = key;\n\n    \n\n   }\n\n   addGroup(user,namegroup,usergroup){\n\n    let users = [];\n    users.push(user.uid)\n\n    for(let j=0;j<usergroup.length;j++ ){\n      users.push(usergroup[j].uid)\n\n    }\n\n    let chat = {\n      name: namegroup,\n      timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n      members: {\n        users: users        \n      }\n\n    }\n\n    let key = firebase.database().ref('Chats/Chats/').push(chat).key\n\n    for (let i=0; i<usergroup.length;i++){\n      firebase.database().ref('Chats/Chats/'+user.uid+'/'+key).set(usergroup[i].uid)\n      firebase.database().ref('Chats/Chats/'+usergroup[i].uid+'/'+key).set(user.uid)\n\n    }\n\n\n    this.keymessage = key;\n\n\n\n   }\n\n  newChat(user){\n\n    //let key = this.afDB.list('/cliente/').push(cliente).key;\n\n    let chat = {\n      timestamp: new Date(),\n      type: 'single'\n    }\n\n   \n\n    \n\n    let key  = firebase.database().ref(this.firebaseAuthService.usersign.uid+'/chats/').push(chat).key;\n    firebase.database().ref(user.uid+'/chats/'+key).set(chat);        \n    firebase.database().ref('/chats/'+key).set(chat);\n    \n\n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/'+key+'/'+user.uid).set('true');\n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/'+key+'/'+this.firebaseAuthService.usersign.uid).set('true');\n    \n\n    firebase.database().ref(user.uid+'/members/'+key+'/'+user.uid).set('true');\n    firebase.database().ref(user.uid+'/members/'+key+'/'+this.firebaseAuthService.usersign.uid).set('true');\n    firebase.database().ref('/members/'+key+'/'+user.uid).set('true');\n    firebase.database().ref('/members/'+key+'/'+this.firebaseAuthService.usersign.uid).set('true');\n\n    return key;\n  }\n\n  newMessage(message){\n\n    console.log(message);\n    let user2 = JSON.parse(localStorage.getItem('user2'))\n\n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/'+localStorage.getItem('idchat')).push(message);\n    firebase.database().ref(user2.uid+'/messages/'+localStorage.getItem('idchat')).push(message);\n    firebase.database().ref('/messages/'+localStorage.getItem('idchat')).push(message);\n\n    \n  }\n  sendMessage(message, user, userrec){\n    let sendmessage = {\n      message: message,\n      timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n      sender: user.uid\n\n    }\n\n    firebase.database().ref('Chats/Messages/'+this.keymessage).push(sendmessage)\n    firebase.database().ref('Chats/Unread/'+userrec.uid+'/'+this.keymessage).push(sendmessage)\n  }\n\n\n\n  getTokenID(userid){\n    return firebase.database().ref('Token/'+userid+'/id');\n\n  }\n\n  newMessageGroup(message, idchat){\n\n    console.log(message);\n    let user2 = JSON.parse(localStorage.getItem('user2'))\n\n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/'+localStorage.getItem('idchat')).push(message);\n    firebase.database().ref('/messages/'+localStorage.getItem('idchat')).push(message);\n\n    \n    firebase.database().ref('/members/').orderByKey().equalTo(idchat).on('value',resp=>{\n      let users = snapshotToArray2(resp)\n      console.log(users);\n      users.forEach(user=>{\n        console.log(user);\n\n        let keyusers = Object.keys(user).filter(key=>key != this.firebaseAuthService.usersign.uid && key != 'key')\n        console.log(keyusers);\n        keyusers.forEach(keyuser=>{\n        firebase.database().ref(keyuser+'/messages/'+localStorage.getItem('idchat')).push(message);\n\n        })\n      })\n    })\n\n\n    \n\n    \n  }\n\n\n  readChats(){\n\n    let chatid = localStorage.getItem('idchat')\n\n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/'+chatid).once('value', resp=>{\n      \n      let messages = snapshotToArray(resp);\n      console.log(messages);\n\n      messages.forEach(message=>{\n        if (message.sender!=this.firebaseAuthService.usersign.uid){\n          firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/'+chatid+'/'+message.key+'/read').set('true');\n        }\n      })\n\n    });\n\n  }\n\n  stopread(){\n    console.log('stop read');\n\n    let chatid = localStorage.getItem('idchat')\n\n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/').off();\n\n  }\n\n  unreadChats(uid,chatid){\n\n    let count = 0;\n\n    return firebase.database().ref('Chats/Unread/'+uid+'/'+chatid)\n\n    /* return firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/'+chatid) */\n    \n    \n   /*  .on('value', resp=>{\n      \n      let messages = snapshotToArray(resp);\n      console.log(messages);\n\n      messages.forEach(message=>{\n        if ((message.sender!=this.firebaseAuthService.usersign.uid) && (message.read=='false')){\n          count = count + 1;\n        }\n      })\n\n      \n      console.log(count);\n    }); */\n \n\n  }\n\n  cleanUnread(uid,chatid){\n\n    firebase.database().ref('Chats/Unread/'+uid+'/'+chatid).remove()\n\n  }\n\n  newChatGroup(users){\n\n    //let key = this.afDB.list('/cliente/').push(cliente).key;\n\n    let chat = {\n      timestamp: new Date(),\n      type: 'group'\n    }\n\n    console.log(users);\n\n    /* agregar al chat */\n    \n\n   \n\n    \n\n    let key  = firebase.database().ref(this.firebaseAuthService.usersign.uid+'/chats/').push(chat).key;            \n    firebase.database().ref('/chats/'+key).set(chat);\n    \n\n    \n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/'+key+'/'+this.firebaseAuthService.usersign.uid).set('true');\n    firebase.database().ref('/members/'+key+'/'+this.firebaseAuthService.usersign.uid).set('true');\n    \n/* users */\nusers.forEach(user=>{\n\n  firebase.database().ref(user.uid+'/members/'+key+'/'+user.uid).set('true');\n  firebase.database().ref(user.uid+'/members/'+key+'/'+this.firebaseAuthService.usersign.uid).set('true');\n  firebase.database().ref('/members/'+key+'/'+user.uid).set('true');\n\n\n  firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/'+key+'/'+user.uid).set('true');\n\n  firebase.database().ref(user.uid+'/chats/'+key).set(chat);\n})\n\n    return key;\n  }\n\n /*  newChat2(user,idchat){\n\n    //let key = this.afDB.list('/cliente/').push(cliente).key;\n\n    let chat = {\n      timestamp: new Date(),\n      type: 'single'\n    }\n\n   \n\n    console.log(user);\n\n    let key  = idchat;\n  \n    \n\n    return key;\n  } */\n\n\n\n\n       \n\n/*  */\n\ngetUsersChat(user){\n  return firebase.database().ref('Chats/Chats/'+user.uid)\n }\n\n getChatType(keychat){\n  return firebase.database().ref('Chats/Chats/'+keychat)\n }\n\n\n\n\n\n\n\n\n\n}\n\n\n\n\n\n"],"sourceRoot":"webpack:///"}