{"version":3,"sources":["src/app/services/chat.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { UserModel } from '../models/users.model';\n\nimport { AuthService } from './auth.service';\n\nimport { Observable, Subject } from 'rxjs';\nimport { of } from 'rxjs';\nimport firebase from 'firebase';\n//import { UserModel } from 'app/models/users.model';\n\nconst snapshotToArray = (snapshot: any) => {\n  const returnArr = [];\n\n  snapshot.forEach((childSnapshot: any) => {\n      const item = childSnapshot.val();\n      item.key = childSnapshot.key;\n      returnArr.push(item);\n  });\n\n  return returnArr;\n};\nconst snapshotToArray2 = (snapshot: any) => {\n  const returnArr = [];\n\n  snapshot.forEach((childSnapshot: any) => {\n      const item = childSnapshot.val();\n      /* item.key = childSnapshot.key; */\n      returnArr.push(item);\n  });\n\n  return returnArr;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\nexport class ChatService {\n   \n  private subject = new Subject<any>();\n  public chatsUsers: any[] = [];\n\n  usersDBRef:any;\n  users: any[] = [];\n\n  public myObservable$: Observable<any>;\n/*  */\nkeymessage;\nuser2\n/*  */\n\n  constructor(private firebaseAuthService: AuthService) { \n    //this.usersDBRef = this.firebaseAuthService.firebaseDB.collection('users');\n\n\n\n//    this.myObservable$ = this.usersDBRef.onSnapshot();\n\n  //  console.log(this.myObservable$);\n   }\n\n\n /*   postUser(user:UserModel){\n      \n      this.usersDBRef\n      .add(Object.assign({}, user)).then(docRef=>{\n          console.log(docRef);\n      }).catch(e=> console.log(\"error: \"+ e));\n   } */\n\n /*getUsers(){\n  this.usersDBRef.onSnapshot(  snap =>{\n    snap.forEach( snapHijo =>{\n        this.users.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        })\n    });\n  });\n }*/\n\n\n  getUserChats(){\n\n    return firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/');\n\n    //return this.afDB.object('cliente/').valueChanges()\n\n  }\n\n  getChatsMembers(idchat){\n    return firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/'+idchat);\n  }\n\n  getChats(){\n    return firebase.database().ref(this.firebaseAuthService.usersign.uid+'/chats/');\n  }\n\n  getUser(uid){\n    return firebase.database().ref('Users/'+uid);\n  }\n\n  getUsers(){\n    return firebase.database().ref('Users/');\n  }\n\n  getRel(user,key){\n     \n    return firebase.database().ref('Relations/'+user.uid+'/'+key)\n   }\n\n   getChat2(user, userchat){\n\n    return firebase.database().ref('Chats/Chats/'+user.uid).orderByValue().equalTo(userchat)\n\n   }\n\n/*   getChat(){\n    return firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/');\n  } */\n\n  getChat(user, userchat){\n\n    return firebase.database().ref('Chats/Chats/'+user.uid+'/'+userchat)\n\n   }\n\n /*  getMessages(chatid){\n    return firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/'+chatid);\n  } */\n\n  getMessages(){\n    return firebase.database().ref('Chats/Messages/'+this.keymessage)\n   }\n\n   addChat(user, userchat){\n    //firebase.database().ref(user.uid+'/data/type').set(type);\n    let chat = {\n      name: 'single',\n      timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n      members: {\n        user1: user.uid,\n        user2: userchat.uid\n      }\n\n    }\n\n    let key = firebase.database().ref('Chats/Chats/').push(chat).key\n    firebase.database().ref('Chats/Chats/'+user.uid+'/'+key).set(userchat.uid)\n    firebase.database().ref('Chats/Chats/'+userchat.uid+'/'+key).set(user.uid)\n    this.keymessage = key;\n\n    \n\n   }\n\n   addGroup(user,namegroup,usergroup){\n\n    let users = [];\n    users.push(user.uid)\n\n    for(let j=0;j<usergroup.length;j++ ){\n      users.push(usergroup[j].uid)\n\n    }\n\n    let chat = {\n      name: namegroup,\n      timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n      members: {\n        users: users        \n      }\n\n    }\n\n    let key = firebase.database().ref('Chats/Chats/').push(chat).key\n\n    for (let i=0; i<usergroup.length;i++){\n      firebase.database().ref('Chats/Chats/'+user.uid+'/'+key).set(usergroup[i].uid)\n      firebase.database().ref('Chats/Chats/'+usergroup[i].uid+'/'+key).set(user.uid)\n\n    }\n\n\n    this.keymessage = key;\n\n\n\n   }\n\n  newChat(user){\n\n    //let key = this.afDB.list('/cliente/').push(cliente).key;\n\n    let chat = {\n      timestamp: new Date(),\n      type: 'single'\n    }\n\n   \n\n    \n\n    let key  = firebase.database().ref(this.firebaseAuthService.usersign.uid+'/chats/').push(chat).key;\n    firebase.database().ref(user.uid+'/chats/'+key).set(chat);        \n    firebase.database().ref('/chats/'+key).set(chat);\n    \n\n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/'+key+'/'+user.uid).set('true');\n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/'+key+'/'+this.firebaseAuthService.usersign.uid).set('true');\n    \n\n    firebase.database().ref(user.uid+'/members/'+key+'/'+user.uid).set('true');\n    firebase.database().ref(user.uid+'/members/'+key+'/'+this.firebaseAuthService.usersign.uid).set('true');\n    firebase.database().ref('/members/'+key+'/'+user.uid).set('true');\n    firebase.database().ref('/members/'+key+'/'+this.firebaseAuthService.usersign.uid).set('true');\n\n    return key;\n  }\n\n  newMessage(message){\n\n    console.log(message);\n    let user2 = JSON.parse(localStorage.getItem('user2'))\n\n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/'+localStorage.getItem('idchat')).push(message);\n    firebase.database().ref(user2.uid+'/messages/'+localStorage.getItem('idchat')).push(message);\n    firebase.database().ref('/messages/'+localStorage.getItem('idchat')).push(message);\n\n    \n  }\n  sendMessage(message, user, userrec){\n    let sendmessage = {\n      message: message,\n      timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\n      sender: user.uid\n\n    }\n\n    firebase.database().ref('Chats/Messages/'+this.keymessage).push(sendmessage)\n    firebase.database().ref('Chats/Unread/'+userrec.uid+'/'+this.keymessage).push(sendmessage)\n  }\n  newMessageGroup(message, idchat){\n\n    console.log(message);\n    let user2 = JSON.parse(localStorage.getItem('user2'))\n\n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/'+localStorage.getItem('idchat')).push(message);\n    firebase.database().ref('/messages/'+localStorage.getItem('idchat')).push(message);\n\n    \n    firebase.database().ref('/members/').orderByKey().equalTo(idchat).on('value',resp=>{\n      let users = snapshotToArray2(resp)\n      console.log(users);\n      users.forEach(user=>{\n        console.log(user);\n\n        let keyusers = Object.keys(user).filter(key=>key != this.firebaseAuthService.usersign.uid && key != 'key')\n        console.log(keyusers);\n        keyusers.forEach(keyuser=>{\n        firebase.database().ref(keyuser+'/messages/'+localStorage.getItem('idchat')).push(message);\n\n        })\n      })\n    })\n\n\n    \n\n    \n  }\n\n\n  readChats(){\n\n    let chatid = localStorage.getItem('idchat')\n\n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/'+chatid).once('value', resp=>{\n      \n      let messages = snapshotToArray(resp);\n      console.log(messages);\n\n      messages.forEach(message=>{\n        if (message.sender!=this.firebaseAuthService.usersign.uid){\n          firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/'+chatid+'/'+message.key+'/read').set('true');\n        }\n      })\n\n    });\n\n  }\n\n  stopread(){\n    console.log('stop read');\n\n    let chatid = localStorage.getItem('idchat')\n\n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/').off();\n\n  }\n\n  unreadChats(chatid){\n\n    let count = 0;\n\n    return firebase.database().ref(this.firebaseAuthService.usersign.uid+'/messages/'+chatid)\n    \n    \n   /*  .on('value', resp=>{\n      \n      let messages = snapshotToArray(resp);\n      console.log(messages);\n\n      messages.forEach(message=>{\n        if ((message.sender!=this.firebaseAuthService.usersign.uid) && (message.read=='false')){\n          count = count + 1;\n        }\n      })\n\n      \n      console.log(count);\n    }); */\n \n\n  }\n\n  newChatGroup(users){\n\n    //let key = this.afDB.list('/cliente/').push(cliente).key;\n\n    let chat = {\n      timestamp: new Date(),\n      type: 'group'\n    }\n\n    console.log(users);\n\n    /* agregar al chat */\n    \n\n   \n\n    \n\n    let key  = firebase.database().ref(this.firebaseAuthService.usersign.uid+'/chats/').push(chat).key;            \n    firebase.database().ref('/chats/'+key).set(chat);\n    \n\n    \n    firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/'+key+'/'+this.firebaseAuthService.usersign.uid).set('true');\n    firebase.database().ref('/members/'+key+'/'+this.firebaseAuthService.usersign.uid).set('true');\n    \n/* users */\nusers.forEach(user=>{\n\n  firebase.database().ref(user.uid+'/members/'+key+'/'+user.uid).set('true');\n  firebase.database().ref(user.uid+'/members/'+key+'/'+this.firebaseAuthService.usersign.uid).set('true');\n  firebase.database().ref('/members/'+key+'/'+user.uid).set('true');\n\n\n  firebase.database().ref(this.firebaseAuthService.usersign.uid+'/members/'+key+'/'+user.uid).set('true');\n\n  firebase.database().ref(user.uid+'/chats/'+key).set(chat);\n})\n\n    return key;\n  }\n\n /*  newChat2(user,idchat){\n\n    //let key = this.afDB.list('/cliente/').push(cliente).key;\n\n    let chat = {\n      timestamp: new Date(),\n      type: 'single'\n    }\n\n   \n\n    console.log(user);\n\n    let key  = idchat;\n  \n    \n\n    return key;\n  } */\n\n\n\n\n       \n\n/*  */\n\ngetUsersChat(user){\n  return firebase.database().ref('Chats/Chats/'+user.uid)\n }\n\n getChatType(keychat){\n  return firebase.database().ref('Chats/Chats/'+keychat)\n }\n\n\n\n\n\n\n\n\n\n}\n\n\n\n\n\n"],"sourceRoot":"webpack:///","file":"default~pages-call-users-list-call-users-list-module~pages-chat-chat-module~pages-chat-list-chat-lis~2ba80dbb-es5.js"}